package at.tugraz.onpoint.database

import androidx.room.*
import androidx.room.Database

@Database(entities = [Todo::class], version = 1)
abstract class OnPointAppDatabase : RoomDatabase() {
    abstract fun getTodoDao(): TodoDao
}

@Entity
data class Todo(
    @PrimaryKey() val uid: Int,
    @ColumnInfo(name = "title") val title: String,
    @ColumnInfo(name = "creation_unix_time") val creationUnixTime: Int,
    @ColumnInfo(name = "expiration_unix_time") val expirationUnixTime: Int?,
    @ColumnInfo(name = "is_completed") val isCompleted: Boolean,
)
// TODO what about an "is_expired" column, generated by the select query? Check @Ignore
// TODO pre-populated the DB with 2 dummy tasks

@Dao
interface TodoDao {
    @Query("SELECT * FROM todo")
    fun loadAll(): List<Todo>

    @Query("SELECT * FROM todo WHERE is_completed")
    fun loadAllCompleted(): List<Todo>

    @Query("SELECT * FROM todo WHERE NOT is_completed")
    fun loadAllNotCompleted(): List<Todo>

    @Insert
    fun insertOne(todo: Todo)

    @Update
    fun updateMany(vararg todo: Todo)

    @Update
    fun updateOne(todo: Todo)

    @Delete
    fun deleteOne(todo: Todo)

    @Delete
    fun deleteMany(vararg todo: Todo)

    @Query("DELETE FROM todo")
    fun deleteAll()
}

